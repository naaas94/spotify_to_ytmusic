[tool.poetry]
name = "spotify2ytmusic"
version = "0.1.0"
description = "Research project exploring automated playlist migration between Spotify and YouTube Music using reverse engineering techniques"
authors = ["Sean Reifschneider <jafo00@gmail.com>"]
license = "Creative Commons Zero v1.0 Universal"
readme = "README.md"
keywords = ["spotify", "youtube-music", "playlist", "migration", "reverse-engineering"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: CC0 1.0 Universal (CC0 1.0) Public Domain Dedication",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Sound/Audio",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[tool.poetry.dependencies]
python = "^3.10"
ytmusicapi = "^1.9.1"
requests = "^2.32.3"

[tool.poetry.group.dev.dependencies]
pytest = "^7.0.0"
black = "^23.0.0"
flake8 = "^6.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
s2yt_gui = "spotify2ytmusic.gui:main"
s2yt_load_liked = "spotify2ytmusic.cli:load_liked"
s2yt_load_liked_albums = "spotify2ytmusic.cli:load_liked_albums"
s2yt_copy_playlist = "spotify2ytmusic.cli:copy_playlist"
s2yt_copy_all_playlists = "spotify2ytmusic.cli:copy_all_playlists"
s2yt_create_playlist = "spotify2ytmusic.cli:create_playlist"
s2yt_list_playlists = "spotify2ytmusic.cli:list_playlists"
s2yt_search = "spotify2ytmusic.cli:search"
s2yt_list_liked_albums = "spotify2ytmusic.cli:list_liked_albums"
s2yt_ytoauth = "spotify2ytmusic.cli:ytoauth"

[tool.briefcase]
project_name = "Spotify2YTMusic"
bundle = "com.linsomniac"
version = "0.1"
license = "CC0-1.0"

[tool.briefcase.app.spotify2ytmusic]
formal_name = "Spotify2YTMusic"
description = "A research tool for exploring automated playlist migration between music streaming platforms"
sources = ['spotify2ytmusic']
requires = [
  'ytmusicapi',
  'tk',
]

[tool.black]
line-length = 88
target-version = ['py310']

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
